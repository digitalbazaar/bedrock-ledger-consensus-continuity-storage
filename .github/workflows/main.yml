name: Bedrock Node.js CI

on: [push]

jobs:
  test-node:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:4.2
        ports:
          - 27017:27017
      redis:
        image: redis:6.0
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
    - name: Install redis-tools
      run: sudo apt-get install redis-tools
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: |
        sudo apt-get install redis-tools
        cd test
        npm install
    - name: Run test with Node.js ${{ matrix.node-version }}
      run: |
        cd test
        npm test
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - name: Run eslint
      run: npm run lint
  coverage:
    needs: [test-node]
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:4.2
        ports:
          - 27017:27017
      redis:
        image: redis:6
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: |
        sudo apt-get install redis-tools
        cd test
        npm install
    - name: Generate coverage report
      run: |
        cd test
        npm run coverage-ci
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./test/coverage.lcov
        fail_ci_if_error: true
